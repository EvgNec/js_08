{"mappings":"AAAO,MAAMA,EAAO,CAACC,EAAKC,KACtB,IACI,MAAMC,EAAOC,KAAKC,UAAUH,GAC5BI,aAAaC,QAAQN,EAAKE,E,CAC5B,MAAOK,GACLC,QAAQC,MAAM,kBAAmBF,EAAIG,Q,GAKhCC,EAAQX,IACf,IACF,MAAME,EAAOG,aAAaO,QAAQZ,GAClC,OAAgB,OAATE,OAAgBW,EAAYV,KAAKW,MAAMZ,E,CAC9C,MAAOO,GACPD,QAAQC,MAAM,oBAAqBA,EAAMC,Q,GCb7C,IAAIK,EAAY,EAChB,MAAMC,EAAUC,SAASC,eAAe,WAClCC,EAAOF,SAASC,eAAe,QAarC,SAASE,EAASC,EAAMC,GAAS,EAAOC,EAAKR,GAC3C,MAAMS,EAAOP,SAASQ,cAAc,MACpCD,EAAKE,YAAcL,EACnBG,EAAKG,QAAQJ,GAAKA,EACdD,GAAQE,EAAKI,UAAUC,IAAI,WAC/BV,EAAKW,YAAYN,GA2CnB,SAAwBO,GACtB,MAAMC,EAAOf,SAASQ,cAAc,QAC9BQ,EAAMhB,SAASiB,eAAe,KACpCF,EAAKG,UAAY,QACjBH,EAAKF,YAAYG,GACjBF,EAAOD,YAAYE,E,CA/CnBI,CAAeZ,E,CAkBjB,SAASa,EAAchB,EAAMC,GAAS,GACpC,MAAO,C,KACLD,E,OACAC,EACAC,GAAIR,E,CC3CR,MAAMuB,EAASrB,SAASC,eAAe,UACjCqB,EAAOtB,SAASC,eAAe,QAGrCoB,EAAOE,iBAAiB,SDAxB,WACE,MAAMC,EAAOzB,EAAQf,MAAMyC,OAC3B1B,EAAQf,MAAQ,GACH,KAATwC,GAIJrB,EAASqB,GAoCX,SAA+BpB,EAAMC,GACnC,MAAMqB,EAAehC,EAjDT,QAmDZ,GADAH,QAAQoC,IAAI,eAAgBD,QACP9B,IAAjB8B,EAA4B,CAEQ,MAAhCE,EAAM,GACZA,EAAIC,KAAKT,EAAchB,EAAMC,IAC7BvB,EAvDU,OAuDE8C,E,MAGZF,EAAaG,KAAKT,EAAchB,EAAMC,IACtCvB,EA3DU,OA2DE4C,GAEZ5B,GAAa,C,CAhDfgC,CAAsBN,IAJpBO,MAAM,oB,ICHVT,EAAKC,iBAAiB,SDkBtB,UAA6BT,OAAEA,IAC7B,MAAMY,EAAehC,EAzBT,QA0BZ,GAAwB,OAApBoB,EAAOkB,SAAmB,CAC5BlB,EAAOH,UAAUsB,OAAO,WACxB,MAAMC,EACJR,EAAaS,WAAUX,GAAQY,OAAOZ,EAAKlB,MAAQ8B,OAAOtB,EAAOJ,QAAQJ,MAC3EoB,EAAaQ,GAAW7B,QAAUqB,EAAaQ,GAAW7B,M,MACrD,GAAIS,EAAOH,UAAU0B,SAAS,SAAU,CAC7CvB,EAAOwB,WAAWC,SACjB,MAAML,EACLR,EAAaS,WAAUX,GAAQY,OAAOZ,EAAKlB,MAAQ8B,OAAOtB,EAAOwB,WAAW5B,QAAQJ,MACtFoB,EAAac,OAAON,EAAW,E,CAEjCpD,EArCY,OAqCA4C,E,IC9Bde,OAAOlB,iBAAiB,oBDiExB,WACE,MAAMG,EAAehC,EAzET,aA0EOE,IAAf8B,GACFA,EAAagB,SAAQ,EAACtC,KAAEA,EAAIC,OAAEA,EAAMC,GAAEA,MACpCH,EAASC,EAAMC,EAAQC,GACvBR,EAAYQ,EAAG,CAAC,G","sources":["src/js/test/05-ls.js","src/js/test/05-func.js","src/js/test/05-test.js"],"sourcesContent":["export const save = (key, value) => {\n    try {\n        const data = JSON.stringify(value);\n        localStorage.setItem(key, data);\n    } catch (err) { \n        console.error(\"Stringify error\", err.message);\n    }\n\n }\n\nexport const load = (key) => { \n      try {\n    const data = localStorage.getItem(key);\n    return data === null ? undefined : JSON.parse(data);\n  } catch (error) {\n    console.error(\"Get state error: \", error.message);\n  }\n}","import { save, load } from './05-ls.js';\nconst keyLS = 'TODO';\nlet currentID = 0;\nconst myInput = document.getElementById('myInput');\nconst myUL = document.getElementById('myUL');\n\nfunction addNewTasks() {\n  const task = myInput.value.trim();\n  myInput.value = '';\n  if (task === '') {\n    alert('Please enter text');\n    return;\n  }\n  createLi(task);\n  addTaskToLocalStorage(task);\n}\n\nfunction createLi(text, isDone = false, id = currentID) {\n  const liEl = document.createElement('li');\n  liEl.textContent = text;\n  liEl.dataset.id = id;\n  if (isDone) liEl.classList.add('checked');\n  myUL.appendChild(liEl);\n  addCloseButton(liEl);\n}\nfunction handleTaskBehaviour({ target }) {\n  const currentState = load(keyLS);\n  if (target.nodeName === 'LI') {\n    target.classList.toggle('checked');\n    const taskIndex =\n      currentState.findIndex(task => Number(task.id) === Number(target.dataset.id))\n    currentState[taskIndex].isDone = !currentState[taskIndex].isDone;    \n  } else if (target.classList.contains('close')) {\n    target.parentNode.remove();\n     const taskIndex =\n      currentState.findIndex(task => Number(task.id) === Number(target.parentNode.dataset.id))\n    currentState.splice(taskIndex, 1);\n  }\n  save(keyLS, currentState);\n}\n\nfunction createTaskObj(text, isDone = false) {\n  return {\n    text,\n    isDone,\n    id: currentID,\n  };\n}\n\nfunction addTaskToLocalStorage(text, isDone) {\n  const currentState = load(keyLS);\n  console.log('currentState', currentState);\n  if (currentState === undefined) {\n    // створюємо масив і додаємо туди перший обєект\n    const arr = [];\n    arr.push(createTaskObj(text, isDone));\n    save(keyLS, arr);\n  } else {\n    //до існуючого додати новий обєект\n    currentState.push(createTaskObj(text, isDone));\n    save(keyLS, currentState);\n  }\n    currentID += 1;\n}\n\nfunction addCloseButton(target) {\n  const span = document.createElement('span');\n  const txt = document.createTextNode('\\u00D7');\n  span.className = 'close';\n  span.appendChild(txt);\n  target.appendChild(span);\n}\n\nfunction fillTaskList() {\n  const currentState = load(keyLS);\n  if (currentState!==undefined) {\n    currentState.forEach(({ text, isDone, id }) => {\n      createLi(text, isDone, id);\n      currentID = id+1;\n    });\n    \n  }\n}\n\nexport { addNewTasks, handleTaskBehaviour, fillTaskList };\n","import { addNewTasks, handleTaskBehaviour, fillTaskList } from './05-func';\n\nconst addBtn = document.getElementById('addBtn');\nconst myUL = document.getElementById('myUL');\n\n\naddBtn.addEventListener('click', addNewTasks);\nmyUL.addEventListener('click', handleTaskBehaviour);\nwindow.addEventListener('DOMContentLoaded', fillTaskList);"],"names":["$6f615c2f68a84759$export$a1544dad697b423d","key","value","data","JSON","stringify","localStorage","setItem","err","console","error","message","$6f615c2f68a84759$export$11e63f7b0f3d9900","getItem","undefined","parse","$367d376ab9d2bec9$var$currentID","$367d376ab9d2bec9$var$myInput","document","getElementById","$367d376ab9d2bec9$var$myUL","$367d376ab9d2bec9$var$createLi","text","isDone","id","liEl","createElement","textContent","dataset","classList","add","appendChild","target","span","txt","createTextNode","className","$367d376ab9d2bec9$var$addCloseButton","$367d376ab9d2bec9$var$createTaskObj","$eeadf5be67660466$var$addBtn","$eeadf5be67660466$var$myUL","addEventListener","task","trim","currentState","log","arr","push","$367d376ab9d2bec9$var$addTaskToLocalStorage","alert","nodeName","toggle","taskIndex","findIndex","Number","contains","parentNode","remove","splice","window","forEach"],"version":3,"file":"05-test.7057409a.js.map"}