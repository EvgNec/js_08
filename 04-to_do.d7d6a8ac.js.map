{"mappings":"YAAO,IAAMA,EAAO,SAACC,EAAKC,GACtB,IACI,IAAMC,EAAOC,KAAKC,UAAUH,GAC5BI,aAAaC,QAAQN,EAAKE,E,CAC5B,MAAOK,GACLC,QAAQC,MAAM,kBAAmBF,EAAIG,Q,GAKhCC,EAAO,SAACX,GACf,IACF,IAAME,EAAOG,aAAaO,QAAQZ,GAClC,OAAgB,OAATE,OAAgBW,EAAYV,KAAKW,MAAMZ,E,CAC9C,MAAOO,GACPD,QAAQC,MAAM,oBAAqBA,EAAMC,Q,GCdvCK,EAAkB,QAElBC,EAAUC,SAASC,eAAe,WAClCC,EAAOF,SAASC,eAAe,QAEjCE,EAAY,EAahB,SAASC,EAASC,G,IAAMC,EAAAC,UAAAC,OAAA,YAAAD,UAAA,IAAcA,UAAA,GAAEE,EAAAF,UAAAC,OAAA,YAAAD,UAAA,GAAcA,UAAA,GAATJ,EACrCO,EAAOV,SAASW,cAAc,MACpCD,EAAKE,YAAcP,EACnBK,EAAKG,QAAQJ,GAAKA,EACfH,GAAQI,EAAKI,UAAUC,IAAI,WAC9Bb,EAAKc,YAAYN,GACjBO,EAAeP,E,CAOjB,SAASO,EAAeC,GACtB,IAAMC,EAAOnB,SAASW,cAAc,QAC9BS,EAAMpB,SAASqB,eAAe,KACpCF,EAAKG,UAAY,QACjBH,EAAKH,YAAYI,GACjBF,EAAOF,YAAYG,E,CAqBrB,SAASI,EAAclB,EAAMC,GAC3B,MAAO,CACLD,OACAC,SACAG,GAAIN,E,CC5DR,IAAMqB,EAAOxB,SAASC,eAAe,QACtBD,SAASC,eAAe,UAGhCwB,iBAAiB,SDExB,WACE,IAAMC,EAAO3B,EAAQf,MAAM2C,OAC3B5B,EAAQf,MAAQ,GACH,KAAT0C,GAIJtB,EAASsB,GAmDX,SAA+BrB,G,IAAMC,EAAAC,UAAAC,OAAA,YAAAD,UAAA,IAAcA,UAAA,GAC3CqB,EAAelC,EAAKI,GAC1B,QAAqBF,IAAjBgC,EAA4B,CAEa,IAArCC,EAAM,CAACN,EAAclB,EAAMC,IACjCxB,EAAKgB,EAAiB+B,E,MAGtBD,EAAaE,KAAKP,EAAclB,EAAMC,IACtCxB,EAAKgB,EAAiB8B,GAExBzB,GAAa,C,CA7Db4B,CAAsBL,IAJpBM,MAAM,oB,ICLVR,EAAKC,iBAAiB,SDiCtB,SAA2BQ,G,IAAAf,EAAAe,EAAEf,OACrBU,EAAelC,EAAKI,GAKY,GAAd,OAApBoB,EAAOgB,SAAmB,CAC5BhB,EAAOJ,UAAUqB,OAAO,WACxB,IAAMC,EAAYR,EAAaS,WAAU,SAACX,G,OAASY,OAAOZ,EAAKjB,MAAQ6B,OAAOpB,EAAOL,QAAQJ,G,IAC7FmB,EAAaQ,GAAW9B,QAAUsB,EAAaQ,GAAW9B,M,MACrD,GAAIY,EAAOJ,UAAUyB,SAAS,SAAU,CAC7CrB,EAAOsB,WAAWC,SAClB,IAAMC,EAAYd,EAAaS,WAAU,SAACX,G,OAASY,OAAOZ,EAAKjB,MAAQ6B,OAAOpB,EAAOsB,WAAW3B,QAAQJ,G,IACxGmB,EAAae,OAAOD,EAAW,E,CAEjC5D,EAAKgB,EAAiB8B,E,IC9CxBgB,OAAOnB,iBAAiB,oBDuExB,WACE,IAAMG,EAAelC,EAAKI,QACLF,IAAjBgC,GACFA,EAAaiB,SAAQ,SAAAZ,G,IAAG5B,EAAI4B,EAAJ5B,KAAMC,EAAM2B,EAAN3B,OAAQG,EAAEwB,EAAFxB,GACpCL,EAASC,EAAMC,EAAQG,GACvBN,EAAYM,EAAK,C","sources":["src/js/04-local_storage.js","src/js/04-functions.js","src/js/04-to_do.js"],"sourcesContent":["export const save = (key, value) => {\n    try {\n        const data = JSON.stringify(value);\n        localStorage.setItem(key, data);\n    } catch (err) { \n        console.error(\"Stringify error\", err.message);\n    }\n\n }\n\nexport const load = (key) => { \n      try {\n    const data = localStorage.getItem(key);\n    return data === null ? undefined : JSON.parse(data);\n  } catch (error) {\n    console.error(\"Get state error: \", error.message);\n  }\n}\n","import { save, load } from './04-local_storage';\nconst localStorageKey = 'tasks';\n\nconst myInput = document.getElementById('myInput');\nconst myUL = document.getElementById('myUL');\n\nlet currentID = 0;\n\nfunction addNewTask() {\n  const task = myInput.value.trim();\n  myInput.value = '';\n  if (task === '') {\n    alert('Please enter text');\n    return;\n  }\n  createLi(task);\n  addTaskToLocalStorage(task);\n}\n\nfunction createLi(text, isDone = false, id = currentID) {\n  const liEl = document.createElement('li');\n  liEl.textContent = text; \n  liEl.dataset.id = id;\n  if(isDone) liEl.classList.add(\"checked\");\n  myUL.appendChild(liEl);\n  addCloseButton(liEl);\n}\n// function createLi(text) {\n//    const liEl = `<li>${text}</li>`\n//     myUL.insertAdjacentHTML(\"beforeend\", liEl);\n// }\n\nfunction addCloseButton(target) {\n  const span = document.createElement('span');\n  const txt = document.createTextNode('\\u00D7');\n  span.className = 'close';\n  span.appendChild(txt);\n  target.appendChild(span);\n}\n\nfunction handlTaskBehavior({ target }) {\n  const currentState = load(localStorageKey);\n\n\n  //  Target.tagName -повертає назву HTML-тега елемента Target\n  // Target.nodeName -повертає імя пточного вузла у вигляді строки\n  if (target.nodeName === 'LI') {\n    target.classList.toggle('checked');\n    const taskIndex = currentState.findIndex((task) => Number(task.id) === Number(target.dataset.id));\n    currentState[taskIndex].isDone = !currentState[taskIndex].isDone;\n  } else if (target.classList.contains('close')) {\n    target.parentNode.remove();\n    const taskIndex = currentState.findIndex((task) => Number(task.id) === Number(target.parentNode.dataset.id));\n    currentState.splice(taskIndex, 1);\n  }\n  save(localStorageKey, currentState);\n}\n\nfunction createTaskObj(text, isDone) {\n  return {\n    text,\n    isDone,\n    id: currentID,\n  };\n}\n\nfunction addTaskToLocalStorage(text, isDone = false) {\n  const currentState = load(localStorageKey);\n  if (currentState === undefined) {\n    //створюємо масив і додаємо туди перший об'єкт задачі\n    const arr = [createTaskObj(text, isDone)];\n    save(localStorageKey, arr);\n  } else {\n    //до вже існуючого масиву додати новий об'єкт задачі\n    currentState.push(createTaskObj(text, isDone));\n    save(localStorageKey, currentState);\n  }\n  currentID += 1;\n}\n\nfunction fillTaskList() {\n  const currentState = load(localStorageKey);\n  if (currentState !== undefined) {\n    currentState.forEach(({ text, isDone, id }) => {\n      createLi(text, isDone, id)\n      currentID = id + 1;\n    });\n    // currentID =\n    //   currentState.length === 0\n    //     ? 0\n    //     : currentState[currentState.length - 1].id + 1;\n  }\n}\nexport { addNewTask, handlTaskBehavior, fillTaskList };\n","import { addNewTask, handlTaskBehavior, fillTaskList } from './04-functions';\n\nconst myUL = document.getElementById('myUL');\nconst addbtn = document.getElementById(\"addBtn\");\n\n\naddbtn.addEventListener(\"click\", addNewTask);\nmyUL.addEventListener(\"click\", handlTaskBehavior);\n\nwindow.addEventListener(\"DOMContentLoaded\", fillTaskList);\n\n\n\n\n\n"],"names":["$e4ee0009afa745fd$export$a1544dad697b423d","key","value","data","JSON","stringify","localStorage","setItem","err","console","error","message","$e4ee0009afa745fd$export$11e63f7b0f3d9900","getItem","undefined","parse","$9f97411ab8e3df0c$var$localStorageKey","$9f97411ab8e3df0c$var$myInput","document","getElementById","$9f97411ab8e3df0c$var$myUL","$9f97411ab8e3df0c$var$currentID","$9f97411ab8e3df0c$var$createLi","text","isDone","arguments","length","id","liEl","createElement","textContent","dataset","classList","add","appendChild","$9f97411ab8e3df0c$var$addCloseButton","target","span","txt","createTextNode","className","$9f97411ab8e3df0c$var$createTaskObj","$ffaf9c3198e55193$var$myUL","addEventListener","task","trim","currentState","arr","push","$9f97411ab8e3df0c$var$addTaskToLocalStorage","alert","param","nodeName","toggle","taskIndex","findIndex","Number","contains","parentNode","remove","taskIndex1","splice","window","forEach"],"version":3,"file":"04-to_do.d7d6a8ac.js.map"}