{"mappings":"YAAO,IAAMA,EAAO,SAACC,EAAKC,GACtB,IACI,IAAMC,EAAOC,KAAKC,UAAUH,GAC5BI,aAAaC,QAAQN,EAAKE,E,CAC5B,MAAOK,GACLC,QAAQC,MAAM,kBAAmBF,EAAIG,Q,GCJvCC,EAAQ,OAERC,EAAUC,SAASC,eAAe,WAClCC,EAAOF,SAASC,eAAe,QA8BrC,SAASE,EAAcC,G,IAAMC,EAAAC,UAAAC,OAAA,YAAAD,UAAA,IAAcA,UAAA,GACzC,MAAO,CACLF,OACAC,SACAG,GApCY,E,CAqDhB,SAASC,EAAeC,GACtB,IAAMC,EAAOX,SAASY,cAAc,QAC9BC,EAAMb,SAASc,eAAe,KACpCH,EAAKI,UAAY,QACjBJ,EAAKK,YAAYH,GACjBH,EAAOM,YAAYL,E,CC1DrB,IAAMM,EAASjB,SAASC,eAAe,UACjCiB,EAAOlB,SAASC,eAAe,QAEpCgB,EAAOE,iBAAiB,SDCzB,WACA,IAmC+Bf,EAAMC,EAC7Be,EApCFC,EAAOtB,EAAQX,MAAMkC,OACZ,KAATD,IASN,SAAkBjB,G,IACVmB,EAAOvB,SAASY,cAAc,MACpCW,EAAKC,YAAcpB,EACnBF,EAAKc,YAAYO,GACnBd,EAAec,E,CATbE,CAASJ,GACTtB,EAAQX,MAAQ,GA6BagB,EA5BPiB,OA8BFK,KADdN,EDjCY,SAACjC,GACf,IACF,IAAME,EAAOG,aAAamC,QAAQxC,GAClC,OAAgB,OAATE,OAAgBqC,EAAYpC,KAAKsC,MAAMvC,E,CAC9C,MAAOO,GACPD,QAAQC,MAAM,oBAAqBA,EAAMC,Q,EC4BvB,CAAKC,IAEvBZ,EAAKY,EAAOK,EAAcC,EAAMC,KAGhCV,QAAQkC,IAAI,eAAgBT,GACpBzB,QAAQkC,IAAI,eAAgBT,EAAYU,KAAK3B,EAAcC,EAAMC,KACzEnB,EAAKY,EAAOsB,EAAYU,KAAK3B,EAAcC,EAAMC,OAzCjD0B,MAAM,e,ICHVb,EAAKC,iBAAiB,SDmBtB,SAA6Ba,G,IAAAtB,EAAAsB,EAAEtB,OAC7Bf,QAAQkC,IAAI,kBAAmBnB,EAAOuB,UAClCvB,EAAOuB,SAAW,KACpBvB,EAAOwB,UAAUC,OAAO,U,ICrB5BC,OAAOjB,iBAAiB,oBDwDxB,WAAwB,G","sources":["src/js/test_page/local_storage.js","src/js/test_page/function.js","src/js/test_page/to_do.js"],"sourcesContent":["export const save = (key, value) => {\n    try {\n        const data = JSON.stringify(value);\n        localStorage.setItem(key, data);\n    } catch (err) { \n        console.error(\"Stringify error\", err.message);\n    }\n\n }\n\nexport const load = (key) => { \n      try {\n    const data = localStorage.getItem(key);\n    return data === null ? undefined : JSON.parse(data);\n  } catch (error) {\n    console.error(\"Get state error: \", error.message);\n  }\n}","import { save, load } from './local_storage';\nconst keyLS = 'TODO';\nlet currentID = 0;\nconst myInput = document.getElementById('myInput');\nconst myUL = document.getElementById('myUL');\n\nfunction addNewTasks() {\nconst task = myInput.value.trim();\n  if (task === '') { \n    alert('Please enter');\n    return;\n  }\n  createLi(task);\n  myInput.value = '';\n  addTaskToLocalStorage(task);\n}\n\nfunction createLi(text, isDone = false, id = currentID) {\n  const liEl = document.createElement('li');\n  liEl.textContent = text;\n  myUL.appendChild(liEl);\naddCloseButton(liEl);\n}\n\n\nfunction handleTaskBehaviour({ target }) {\n  console.log(\"target.nodeName\", target.nodeName);\n  if (target.nodeName = 'LI') {\n    target.classList.toggle('checked');\n   }\n}\n\n\n\nfunction createTaskObj(text, isDone = false) {\n  return {\n    text,\n    isDone,\n    id: currentID,\n  };\n}\n\nfunction addTaskToLocalStorage(text, isDone) {\n  const curentState = load(keyLS);\n  if (curentState === undefined) {\n    save(keyLS, createTaskObj(text, isDone)); \n  }\n  else {\n    console.log(\"curentState2\", curentState);\n            console.log(\"curentState3\", curentState.push(createTaskObj(text, isDone)))\n    save(keyLS, curentState.push(createTaskObj(text, isDone))); \n  }\n \n}\n\nfunction addCloseButton(target) {\n  const span = document.createElement('span');\n  const txt = document.createTextNode('\\u00D7');\n  span.className = 'close';\n  span.appendChild(txt);\n  target.appendChild(span);\n}\n\nfunction fillTaskList() {\n\n}\n\nexport { addNewTasks, handleTaskBehaviour, fillTaskList };\n","import { addNewTasks, handleTaskBehaviour, fillTaskList } from './function';\n\nconst addBtn = document.getElementById('addBtn');\nconst myUL = document.getElementById('myUL');\n\n addBtn.addEventListener('click', addNewTasks);\nmyUL.addEventListener('click', handleTaskBehaviour);\nwindow.addEventListener('DOMContentLoaded', fillTaskList);"],"names":["$43ee3cd614fde96d$export$a1544dad697b423d","key","value","data","JSON","stringify","localStorage","setItem","err","console","error","message","$b220961d16855fcc$var$keyLS","$b220961d16855fcc$var$myInput","document","getElementById","$b220961d16855fcc$var$myUL","$b220961d16855fcc$var$createTaskObj","text","isDone","arguments","length","id","$b220961d16855fcc$var$addCloseButton","target","span","createElement","txt","createTextNode","className","appendChild","$f94404f58bf56485$var$addBtn","$f94404f58bf56485$var$myUL","addEventListener","curentState","task","trim","liEl","textContent","$b220961d16855fcc$var$createLi","undefined","getItem","parse","log","push","alert","param","nodeName","classList","toggle","window"],"version":3,"file":"test.36e79073.js.map"}