{"mappings":"YAAO,ICGDA,EAAUC,SAASC,eAAe,WAClCC,EAAOF,SAASC,eAAe,QAuCrC,SAASE,EAAeC,GACtB,IAAMC,EAAOL,SAASM,cAAc,QAC9BC,EAAMP,SAASQ,eAAe,KACpCH,EAAKI,UAAY,QACjBJ,EAAKK,YAAYH,GACjBH,EAAOM,YAAYL,E,CC9CrB,IAAMM,EAASX,SAASC,eAAe,UACjCW,EAAOZ,SAASC,eAAe,QAEpCU,EAAOE,iBAAiB,SDCzB,WACA,IAAMC,EAAOf,EAAQgB,MAAMC,OACZ,KAATF,IAQN,SAAkBG,G,IACVC,EAAOlB,SAASM,cAAc,MACpCY,EAAKC,YAAcF,EACnBf,EAAKQ,YAAYQ,GACnBf,EAAee,E,CARbE,CAASN,GACTf,EAAQgB,MAAQ,IAJdM,MAAM,e,ICHVT,EAAKC,iBAAiB,SDkBtB,SAA6BS,G,IAAAlB,EAAAkB,EAAElB,OAC7BmB,QAAQC,IAAI,kBAAmBpB,EAAOqB,UAClCrB,EAAOqB,SAAW,KACpBrB,EAAOsB,UAAUC,OAAO,U,ICpB5BC,OAAOf,iBAAiB,oBD4CxB,WAAwB,G","sources":["src/js/test_page/local_storage.js","src/js/test_page/function.js","src/js/test_page/to_do.js"],"sourcesContent":["export const save = (key, value) => {\n    try {\n        const data = JSON.stringify(value);\n        localStorage.setItem(key, data);\n    } catch (err) { \n        console.error(\"Stringify error\", err.message);\n    }\n\n }\n\nexport const load = (key) => { \n      try {\n    const data = localStorage.getItem(key);\n    return data === null ? undefined : JSON.parse(data);\n  } catch (error) {\n    console.error(\"Get state error: \", error.message);\n  }\n}","import { save, load } from './local_storage';\nconst keyLS = 'TODO';\nlet currentID = 0;\nconst myInput = document.getElementById('myInput');\nconst myUL = document.getElementById('myUL');\n\nfunction addNewTasks() {\nconst task = myInput.value.trim();\n  if (task === '') { \n    alert('Please enter');\n    return;\n  }\n  createLi(task);\n  myInput.value = '';\n}\n\nfunction createLi(text, isDone = false, id = currentID) {\n  const liEl = document.createElement('li');\n  liEl.textContent = text;\n  myUL.appendChild(liEl);\naddCloseButton(liEl);\n}\n\n\nfunction handleTaskBehaviour({ target }) {\n  console.log(\"target.nodeName\", target.nodeName);\n  if (target.nodeName = 'LI') {\n    target.classList.toggle('checked');\n   }\n}\n\n\n\nfunction createTaskObj(text, isDone = false) {\n  return {\n\n  };\n}\n\nfunction addTaskToLocalStorage(text, isDone) {\n\n}\n\nfunction addCloseButton(target) {\n  const span = document.createElement('span');\n  const txt = document.createTextNode('\\u00D7');\n  span.className = 'close';\n  span.appendChild(txt);\n  target.appendChild(span);\n}\n\nfunction fillTaskList() {\n\n}\n\nexport { addNewTasks, handleTaskBehaviour, fillTaskList };\n","import { addNewTasks, handleTaskBehaviour, fillTaskList } from './function';\n\nconst addBtn = document.getElementById('addBtn');\nconst myUL = document.getElementById('myUL');\n\n addBtn.addEventListener('click', addNewTasks);\nmyUL.addEventListener('click', handleTaskBehaviour);\nwindow.addEventListener('DOMContentLoaded', fillTaskList);"],"names":["$b220961d16855fcc$var$myInput","document","getElementById","$b220961d16855fcc$var$myUL","$b220961d16855fcc$var$addCloseButton","target","span","createElement","txt","createTextNode","className","appendChild","$f94404f58bf56485$var$addBtn","$f94404f58bf56485$var$myUL","addEventListener","task","value","trim","text","liEl","textContent","$b220961d16855fcc$var$createLi","alert","param","console","log","nodeName","classList","toggle","window"],"version":3,"file":"test.6c6cb1a0.js.map"}